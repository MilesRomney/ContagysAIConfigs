services:
  litellm:
    image: 'ghcr.io/berriai/litellm-database:main-stable'
    depends_on:
      redis:
        condition: service_healthy
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '4000:4000'
    environment:
      - SERVICE_URL_LITELLM_4000
      - 'LITELLM_LOG=${LITELLM_LOG:-ERROR}'
      - 'LITELLM_MODE=${LITELLM_MODE:-PRODUCTION}'
      - 'LITELLM_MASTER_KEY=${SERVICE_PASSWORD_MASTERKEY}'
      - 'UI_USERNAME=${SERVICE_USER_UI}'
      - 'UI_PASSWORD=${SERVICE_PASSWORD_UI}'
      - 'DATABASE_URL=${DATABASE_URL}'
      - 'STORE_MODEL_IN_DB=true'
      - 'REDIS_HOST=${REDIS_HOST:-redis}'
      - 'REDIS_PORT=${REDIS_PORT:-6379}'
      - 'REDIS_PASSWORD=${REDIS_PASSWORD}'
      - 'OPENAI_API_KEY=${OPENAI_API_KEY}'
      - 'OPENAI_API_BASE=${OPENAI_API_BASE}'
      - 'ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}'
      - 'ANTHROPIC_API_BASE=${ANTHROPIC_API_BASE}'
      - 'VOYAGE_API_KEY=${VOYAGE_API_KEY}'
      - 'VOYAGE_API_BASE=${VOYAGE_API_BASE}'
    volumes:
      - type: bind
        source: ./litellm-config.yaml
        target: /app/config.yaml
        content: |
          general_settings:
            proxy_batch_write_at: 60

          router_settings:
            redis_host: os.environ/REDIS_HOST
            redis_port: os.environ/REDIS_PORT
            redis_password: os.environ/REDIS_PASSWORD
            enable_pre_call_check: true

          litellm_settings:
            set_verbose: false
            json_logs: true
            log_raw_request_response: true
            service_callback: ["prometheus_system"]
            drop_params: true
            num_retries: 3
            request_timeout: 600
            telemetry: false
            cache: true
            cache_params:
              type: redis
              host: os.environ/REDIS_HOST
              port: os.environ/REDIS_PORT
              password: os.environ/REDIS_PASSWORD
              namespace: "litellm_cache"
              ttl: 600
            success_callback:
              - "prometheus"
            failure_callback:
              - "prometheus"
    healthcheck:
      test:
        - CMD
        - python
        - '-c'
        - "import requests as r;r.get('http://127.0.0.1:4000/health/liveliness').raise_for_status()"
      interval: 5s
      timeout: 5s
      retries: 3
    command:
      - '--config'
      - /app/config.yaml
      - '--port'
      - '4000'
      - '--num_workers'
      - '8'

  redis:
    image: 'redis:7-alpine'
    command: 'redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}'
    volumes:
      - 'redis-data:/data'
    healthcheck:
      test:
        - CMD
        - redis-cli
        - '--no-auth-warning'
        - '-a'
        - '${REDIS_PASSWORD}'
        - ping
      interval: 5s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus
    depends_on:
      litellm:
        condition: service_healthy
    ports:
      - '9090:9090'
    volumes:
      - prometheus-data:/prometheus
      - type: bind
        source: ./prometheus.yml
        target: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s

          scrape_configs:
            - job_name: 'litellm'
              static_configs:
                - targets: ['litellm:4000']
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
    restart: always

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local